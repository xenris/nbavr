#ifndef NBAVR_INTERRUPTS_HPP
#define NBAVR_INTERRUPTS_HPP

#define MAKE_INTERRUPT_HANDLER_0_HEADER(name,NAME) \
    extern void (*_##name##Interrupt)(void*); \
    extern void* _##name##InterruptData;

#define MAKE_INTERRUPT_HANDLER_1_HEADER(name,NAME,id) \
    extern void (*_##name##id##Interrupt)(void*); \
    extern void* _##name##id##InterruptData;

#define MAKE_INTERRUPT_HANDLER_2_HEADER(name1, name2, NAME1, NAME2, id) \
    extern void (*_##name1##id##name2##Interrupt)(void*); \
    extern void* _##name1##id##name2##InterruptData;

#ifdef CHIP_EXINT_0
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 0)
#endif

#ifdef CHIP_EXINT_1
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 1)
#endif

#ifdef CHIP_EXINT_2
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 2)
#endif

#ifdef CHIP_EXINT_3
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 3)
#endif

#ifdef CHIP_EXINT_4
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 4)
#endif

#ifdef CHIP_EXINT_5
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 5)
#endif

#ifdef CHIP_EXINT_6
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 6)
#endif

#ifdef CHIP_EXINT_7
    MAKE_INTERRUPT_HANDLER_1_HEADER(exInt, EXINT, 7)
#endif

#ifdef CHIP_PCINT_0
    MAKE_INTERRUPT_HANDLER_1_HEADER(pcInt, PCINT, 0)
#endif

#ifdef CHIP_PCINT_1
    MAKE_INTERRUPT_HANDLER_1_HEADER(pcInt, PCINT, 1)
#endif

#ifdef CHIP_PCINT_2
    MAKE_INTERRUPT_HANDLER_1_HEADER(pcInt, PCINT, 2)
#endif

// TODO WDT

#ifdef CHIP_TIMERCOUNTER_0
    // TODO Capture interrupt handler for all timers.

    #ifdef CHIP_TIMERCOUNTER_0_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 0)
    #endif

    #ifdef CHIP_TIMERCOUNTER_0_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 0)
    #endif

    #ifdef CHIP_TIMERCOUNTER_0_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 0)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 0)
#endif

#ifdef CHIP_TIMERCOUNTER_1
    #ifdef CHIP_TIMERCOUNTER_1_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 1)
    #endif

    #ifdef CHIP_TIMERCOUNTER_1_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 1)
    #endif

    #ifdef CHIP_TIMERCOUNTER_1_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 1)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 1)
#endif

#ifdef CHIP_TIMERCOUNTER_2
    #ifdef CHIP_TIMERCOUNTER_2_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 2)
    #endif

    #ifdef CHIP_TIMERCOUNTER_2_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 2)
    #endif

    #ifdef CHIP_TIMERCOUNTER_2_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 2)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 2)
#endif

#ifdef CHIP_TIMERCOUNTER_3
    #ifdef CHIP_TIMERCOUNTER_3_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 3)
    #endif

    #ifdef CHIP_TIMERCOUNTER_3_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 3)
    #endif

    #ifdef CHIP_TIMERCOUNTER_3_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 3)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 3)
#endif

#ifdef CHIP_TIMERCOUNTER_4
    #ifdef CHIP_TIMERCOUNTER_4_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 4)
    #endif

    #ifdef CHIP_TIMERCOUNTER_4_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 4)
    #endif

    #ifdef CHIP_TIMERCOUNTER_4_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 4)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 4)
#endif

#ifdef CHIP_TIMERCOUNTER_5
    #ifdef CHIP_TIMERCOUNTER_5_OUTPUTCOMPARE_A
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareA, TIMERCOUNTER, OUTPUTCOMPARE_A, 5)
    #endif

    #ifdef CHIP_TIMERCOUNTER_5_OUTPUTCOMPARE_B
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareB, TIMERCOUNTER, OUTPUTCOMPARE_B, 5)
    #endif

    #ifdef CHIP_TIMERCOUNTER_5_OUTPUTCOMPARE_C
        MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, OutputCompareC, TIMERCOUNTER, OUTPUTCOMPARE_C, 5)
    #endif

    MAKE_INTERRUPT_HANDLER_2_HEADER(timerCounter, Overflow, TIMERCOUNTER, OVERFLOW, 5)
#endif

//TODO spi,stc

#ifdef CHIP_USART_0
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, RxComplete, USART, RX_COMPLETE, 0)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, TxComplete, USART, TX_COMPLETE, 0)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, DataRegisterEmpty, USART, DATA_REG_EMPTY, 0)
#endif

#ifdef CHIP_USART_1
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, RxComplete, USART, RX_COMPLETE, 1)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, TxComplete, USART, TX_COMPLETE, 1)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, DataRegisterEmpty, USART, DATA_REG_EMPTY, 1)
#endif

#ifdef CHIP_USART_2
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, RxComplete, USART, RX_COMPLETE, 2)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, TxComplete, USART, TX_COMPLETE, 2)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, DataRegisterEmpty, USART, DATA_REG_EMPTY, 2)
#endif

#ifdef CHIP_USART_3
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, RxComplete, USART, RX_COMPLETE, 3)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, TxComplete, USART, TX_COMPLETE, 3)
    MAKE_INTERRUPT_HANDLER_2_HEADER(usart, DataRegisterEmpty, USART, DATA_REG_EMPTY, 3)
#endif

#ifdef CHIP_ADC
    MAKE_INTERRUPT_HANDLER_0_HEADER(adc, ADC)
#endif

//TODO ee
//TODO analog comp
//TODO twi
//TODO spm mem

#endif
